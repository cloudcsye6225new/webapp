name: Application_Test

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: pr-check
    runs-on: ubuntu-latest
    

    env:
      PGHOST: ${{ secrets.PGHOST }}
      PGPORT: ${{ secrets.PGPORT }}
      PGUSER: postgres
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
      PGDATABASE: ${{ secrets.PGDATABASE }}
      TEST_DATABASE: ${{ secrets.TEST_DATABASE }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
      - name: Start PostgreSQL service
        run: sudo service postgresql start

      - name: Wait for PostgreSQL to start
        run: |
          timeout 5 bash -c '
            until sudo -u postgres psql -c "\\l" &>/dev/null; do
             sleep 1
           done
          '
      - name: Check PostgreSQL status
        run: sudo service postgresql status

      - name: Create PostgreSQL user and database
        run: |
          echo "ALTER USER postgres WITH ENCRYPTED PASSWORD '${{ secrets.PGPASSWORD }}';" | sudo -u postgres psql
      - name: Create PostgreSQL database
        run: |
          psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ${{ secrets.PGDATABASE }};"
          psql -h localhost -U postgres -d postgres -c "CREATE DATABASE ${{ secrets.TEST_DATABASE }};"
      - name: List PostgreSQL databases
        run: |
          psql -h localhost -U postgres -l
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Replace with your desired Python version
      
      - name: changing directory
        run: |
          pwd
          ls
          cd App_Test
          ls
          pip install -r requirements.txt  
     
      - name: install psycopg2
        run: |
          sudo apt install libpq-dev
          pip install psycopg2-binary
          # Install uvicorn
          pip install uvicorn
     
      - name: Run FastAPI application
        run: |
            pwd
            cd App_Test
            uvicorn main:app --host 0.0.0.0 --port 8000 --reload &

      - name: Wait for FastAPI to start
        run: |
          cd App_Test
          pytest

      - name: Install Packer
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install packer

      - name: Run Packer fmt
        run: |
          cd App_Test
          packer fmt -check .
        continue-on-error: true
        id: packer_fmt

      - name: Check Packer fmt result
        if: steps.packer_fmt.outcome == 'failure'
        run: |
          echo "Packer fmt check failed. Please format your Packer templates."
          exit 1

      - name: Run Packer validate
        run: |
          cd App_Test
          packer validate -syntax-only .
        id: packer_validate
